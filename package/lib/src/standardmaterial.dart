part of babylon;

/// class StandardMaterial
@JS()
class StandardMaterial extends PushMaterial {
  external StandardMaterial(String name, Scene scene);
  external ImageProcessingConfiguration get imageProcessingConfiguration;
  external bool get cameraColorCurvesEnabled;
  external bool get cameraColorGradingEnabled;
  external bool get cameraToneMappingEnabled;
  external num get cameraExposure;
  external num get cameraContrast;
  external BaseTexture get cameraColorGradingTexture;
  external ColorCurves get cameraColorCurves;
  external bool get canRenderToMRT;
  external bool get hasRenderTargetTextures;
  external bool get useLogarithmicDepth;
  external bool get DiffuseTextureEnabled;
  external bool get DetailTextureEnabled;
  external bool get AmbientTextureEnabled;
  external bool get OpacityTextureEnabled;
  external bool get ReflectionTextureEnabled;
  external bool get EmissiveTextureEnabled;
  external bool get SpecularTextureEnabled;
  external bool get BumpTextureEnabled;
  external bool get LightmapTextureEnabled;
  external bool get RefractionTextureEnabled;
  external bool get ColorGradingTextureEnabled;
  external bool get FresnelEnabled;
  external BaseTexture get diffuseTexture;
  external BaseTexture get ambientTexture;
  external BaseTexture get opacityTexture;
  external BaseTexture get reflectionTexture;
  external BaseTexture get emissiveTexture;
  external BaseTexture get specularTexture;
  external BaseTexture get bumpTexture;
  external BaseTexture get lightmapTexture;
  external BaseTexture get refractionTexture;
  external Color3 get ambientColor;
  external Color3 get diffuseColor;
  external Color3 get specularColor;
  external Color3 get emissiveColor;
  external num get specularPower;
  external bool get useAlphaFromDiffuseTexture;
  external bool get useEmissiveAsIllumination;
  external bool get linkEmissiveWithDiffuse;
  external bool get useSpecularOverAlpha;
  external bool get useReflectionOverAlpha;
  external bool get disableLighting;
  external bool get useObjectSpaceNormalMap;
  external bool get useParallax;
  external bool get useParallaxOcclusion;
  external num get parallaxScaleBias;
  external num get roughness;
  external num get indexOfRefraction;
  external bool get invertRefractionY;
  external num get alphaCutOff;
  external bool get useLightmapAsShadowmap;
  external FresnelParameters get diffuseFresnelParameters;
  external FresnelParameters get opacityFresnelParameters;
  external FresnelParameters get reflectionFresnelParameters;
  external FresnelParameters get refractionFresnelParameters;
  external FresnelParameters get emissiveFresnelParameters;
  external bool get useReflectionFresnelFromSpecular;
  external bool get useGlossinessFromSpecularMapAlpha;
  external num get maxSimultaneousLights;
  external bool get invertNormalMapX;
  external bool get invertNormalMapY;
  external bool get twoSidedLighting;
  external PrePassConfiguration get prePassConfiguration;
  external DetailMapConfiguration get detailMap;
  external set imageProcessingConfiguration(ImageProcessingConfiguration value);
  external set cameraColorCurvesEnabled(bool value);
  external set cameraColorGradingEnabled(bool value);
  external set cameraToneMappingEnabled(bool value);
  external set cameraExposure(num value);
  external set cameraContrast(num value);
  external set cameraColorGradingTexture(BaseTexture value);
  external set cameraColorCurves(ColorCurves value);
  external set useLogarithmicDepth(bool value);
  external set DiffuseTextureEnabled(bool value);
  external set DetailTextureEnabled(bool value);
  external set AmbientTextureEnabled(bool value);
  external set OpacityTextureEnabled(bool value);
  external set ReflectionTextureEnabled(bool value);
  external set EmissiveTextureEnabled(bool value);
  external set SpecularTextureEnabled(bool value);
  external set BumpTextureEnabled(bool value);
  external set LightmapTextureEnabled(bool value);
  external set RefractionTextureEnabled(bool value);
  external set ColorGradingTextureEnabled(bool value);
  external set FresnelEnabled(bool value);
  external set diffuseTexture(BaseTexture diffuseTexture);
  external set ambientTexture(BaseTexture ambientTexture);
  external set opacityTexture(BaseTexture opacityTexture);
  external set reflectionTexture(BaseTexture reflectionTexture);
  external set emissiveTexture(BaseTexture emissiveTexture);
  external set specularTexture(BaseTexture specularTexture);
  external set bumpTexture(BaseTexture bumpTexture);
  external set lightmapTexture(BaseTexture lightmapTexture);
  external set refractionTexture(BaseTexture refractionTexture);
  external set ambientColor(Color3 ambientColor);
  external set diffuseColor(Color3 diffuseColor);
  external set specularColor(Color3 specularColor);
  external set emissiveColor(Color3 emissiveColor);
  external set specularPower(num specularPower);
  external set useAlphaFromDiffuseTexture(bool useAlphaFromDiffuseTexture);
  external set useEmissiveAsIllumination(bool useEmissiveAsIllumination);
  external set linkEmissiveWithDiffuse(bool linkEmissiveWithDiffuse);
  external set useSpecularOverAlpha(bool useSpecularOverAlpha);
  external set useReflectionOverAlpha(bool useReflectionOverAlpha);
  external set disableLighting(bool disableLighting);
  external set useObjectSpaceNormalMap(bool useObjectSpaceNormalMap);
  external set useParallax(bool useParallax);
  external set useParallaxOcclusion(bool useParallaxOcclusion);
  external set parallaxScaleBias(num parallaxScaleBias);
  external set roughness(num roughness);
  external set indexOfRefraction(num indexOfRefraction);
  external set invertRefractionY(bool invertRefractionY);
  external set alphaCutOff(num alphaCutOff);
  external set useLightmapAsShadowmap(bool useLightmapAsShadowmap);
  external set diffuseFresnelParameters(FresnelParameters diffuseFresnelParameters);
  external set opacityFresnelParameters(FresnelParameters opacityFresnelParameters);
  external set reflectionFresnelParameters(FresnelParameters reflectionFresnelParameters);
  external set refractionFresnelParameters(FresnelParameters refractionFresnelParameters);
  external set emissiveFresnelParameters(FresnelParameters emissiveFresnelParameters);
  external set useReflectionFresnelFromSpecular(bool useReflectionFresnelFromSpecular);
  external set useGlossinessFromSpecularMapAlpha(bool useGlossinessFromSpecularMapAlpha);
  external set maxSimultaneousLights(num maxSimultaneousLights);
  external set invertNormalMapX(bool invertNormalMapX);
  external set invertNormalMapY(bool invertNormalMapY);
  external set twoSidedLighting(bool twoSidedLighting);
  external String getClassName();
  external bool needAlphaBlending();
  external bool needAlphaTesting();
  external BaseTexture getAlphaTestTexture();
  external bool isReadyForSubMesh(AbstractMesh mesh, SubMesh subMesh, [bool useInstances]);
  external void buildUniformLayout();
  external void unbind();
  external void bindForSubMesh(Matrix world, Mesh mesh, SubMesh subMesh);
  external List<IAnimatable> getAnimatables();
  external List<BaseTexture> getActiveTextures();
  external bool hasTexture(BaseTexture texture);
  external void dispose([bool forceDisposeEffect, bool forceDisposeTextures, bool notBoundToMesh]);
  external StandardMaterial clone(String name);
  external dynamic serialize();
  external static StandardMaterial Parse(dynamic parsedMaterial, Scene scene, String rootUrl);
}
