part of babylon;

@JS()
@anonymous
class SceneGetWorldExtendsResult {
  external factory SceneGetWorldExtendsResult({Vector3 min, Vector3 max});
  external Vector3 get min;
  external Vector3 get max;
}

/// class Scene
@JS()
class Scene extends AbstractScene implements IAnimatable, IClipPlanesHolder {
  external Scene(Engine engine, [SceneOptions options]);
  external BaseTexture get environmentTexture;
  external num get environmentIntensity;
  external ImageProcessingConfiguration get imageProcessingConfiguration;
  external bool get forceWireframe;
  external bool get skipFrustumClipping;
  external bool get forcePointsCloud;
  external AnimationPropertiesOverride get animationPropertiesOverride;
  external Vector2 get unTranslatedPointer;
  external num get DragMovementThreshold;
  external num get LongPressDelay;
  external num get DoubleClickDelay;
  external bool get ExclusiveDoubleClickMode;
  external bool get useRightHandedSystem;
  external bool get fogEnabled;
  external num get fogMode;
  external bool get shadowsEnabled;
  external bool get lightsEnabled;
  external Camera get activeCamera;
  external Material get defaultMaterial;
  external bool get texturesEnabled;
  external bool get skeletonsEnabled;
  external ICollisionCoordinator get collisionCoordinator;
  external List<Plane> get frustumPlanes;
  external AbstractMesh get meshUnderPointer;
  external num get pointerX;
  external num get pointerY;
  external PerfCounter get totalVerticesPerfCounter;
  external PerfCounter get totalActiveIndicesPerfCounter;
  external PerfCounter get activeParticlesPerfCounter;
  external PerfCounter get activeBonesPerfCounter;
  external bool get isLoading;
  external List<Animatable> get animatables;
  external String get uid;
  external bool get blockfreeActiveMeshesAndRenderingGroups;
  external bool get isDisposed;
  external bool get blockMaterialDirtyMechanism;
  external static num get FOGMODE_NONE;
  external static num get FOGMODE_EXP;
  external static num get FOGMODE_EXP2;
  external static num get FOGMODE_LINEAR;
  external static num get MinDeltaTime;
  external static num get MaxDeltaTime;
  external Camera get cameraToUseForPointers;
  external bool get autoClear;
  external bool get autoClearDepthAndStencil;
  external Color4 get clearColor;
  external Color3 get ambientColor;
  external BaseTexture get environmentBRDFTexture;
  external Plane get clipPlane;
  external Plane get clipPlane2;
  external Plane get clipPlane3;
  external Plane get clipPlane4;
  external Plane get clipPlane5;
  external Plane get clipPlane6;
  external bool get animationsEnabled;
  external bool get useConstantAnimationDeltaTime;
  external bool get constantlyUpdateMeshUnderPointer;
  external String get hoverCursor;
  external String get defaultCursor;
  external bool get doNotHandleCursors;
  external bool get preventDefaultOnPointerDown;
  external bool get preventDefaultOnPointerUp;
  external dynamic get metadata;
  external dynamic get reservedDataStore;
  external String get loadingPluginName;
  external List<RegExp> get disableOfflineSupportExceptionRules;
  external Observable<Scene> get onDisposeObservable;
  external Observable<Scene> get onBeforeRenderObservable;
  external Observable<Scene> get onAfterRenderObservable;
  external Observable<Camera> get onAfterRenderCameraObservable;
  external Observable<Scene> get onBeforeAnimationsObservable;
  external Observable<Scene> get onAfterAnimationsObservable;
  external Observable<Scene> get onBeforeDrawPhaseObservable;
  external Observable<Scene> get onAfterDrawPhaseObservable;
  external Observable<Scene> get onReadyObservable;
  external Observable<Camera> get onBeforeCameraRenderObservable;
  external Observable<Camera> get onAfterCameraRenderObservable;
  external Observable<Scene> get onBeforeActiveMeshesEvaluationObservable;
  external Observable<Scene> get onAfterActiveMeshesEvaluationObservable;
  external Observable<Scene> get onBeforeParticlesRenderingObservable;
  external Observable<Scene> get onAfterParticlesRenderingObservable;
  external Observable<Scene> get onDataLoadedObservable;
  external Observable<Camera> get onNewCameraAddedObservable;
  external Observable<Camera> get onCameraRemovedObservable;
  external Observable<Light> get onNewLightAddedObservable;
  external Observable<Light> get onLightRemovedObservable;
  external Observable<Geometry> get onNewGeometryAddedObservable;
  external Observable<Geometry> get onGeometryRemovedObservable;
  external Observable<TransformNode> get onNewTransformNodeAddedObservable;
  external Observable<TransformNode> get onTransformNodeRemovedObservable;
  external Observable<AbstractMesh> get onNewMeshAddedObservable;
  external Observable<AbstractMesh> get onMeshRemovedObservable;
  external Observable<Skeleton> get onNewSkeletonAddedObservable;
  external Observable<Skeleton> get onSkeletonRemovedObservable;
  external Observable<Material> get onNewMaterialAddedObservable;
  external Observable<MultiMaterial> get onNewMultiMaterialAddedObservable;
  external Observable<Material> get onMaterialRemovedObservable;
  external Observable<MultiMaterial> get onMultiMaterialRemovedObservable;
  external Observable<BaseTexture> get onNewTextureAddedObservable;
  external Observable<BaseTexture> get onTextureRemovedObservable;
  external Observable<Scene> get onBeforeRenderTargetsRenderObservable;
  external Observable<Scene> get onAfterRenderTargetsRenderObservable;
  external Observable<Scene> get onBeforeStepObservable;
  external Observable<Scene> get onAfterStepObservable;
  external Observable<Scene> get onActiveCameraChanged;
  external Observable<RenderingGroupInfo> get onBeforeRenderingGroupObservable;
  external Observable<RenderingGroupInfo> get onAfterRenderingGroupObservable;
  external Observable<AbstractMesh> get onMeshImportedObservable;
  external Observable<Scene> get onAnimationFileImportedObservable;
  external AbstractMesh Function(AbstractMesh mesh, Camera camera) get customLODSelector;
  external bool Function(AbstractMesh Mesh) get pointerDownPredicate;
  external bool Function(AbstractMesh Mesh) get pointerUpPredicate;
  external bool Function(AbstractMesh Mesh) get pointerMovePredicate;
  external void Function(PointerEvent evt, PickingInfo pickInfo, PointerEventTypes type) get onPointerMove;
  external void Function(PointerEvent evt, PickingInfo pickInfo, PointerEventTypes type) get onPointerDown;
  external void Function(PointerEvent evt, PickingInfo pickInfo, PointerEventTypes type) get onPointerUp;
  external void Function(PointerEvent evt, PickingInfo pickInfo) get onPointerPick;
  external Observable<PointerInfoPre> get onPrePointerObservable;
  external Observable<PointerInfo> get onPointerObservable;
  external Observable<KeyboardInfoPre> get onPreKeyboardObservable;
  external Observable<KeyboardInfo> get onKeyboardObservable;
  external Color3 get fogColor;
  external num get fogDensity;
  external num get fogStart;
  external num get fogEnd;
  external bool get prePass;
  external List<Camera> get activeCameras;
  external bool get physicsEnabled;
  external bool get particlesEnabled;
  external bool get spritesEnabled;
  external bool get lensFlaresEnabled;
  external bool get collisionsEnabled;
  external Vector3 get gravity;
  external bool get postProcessesEnabled;
  external PostProcessManager get postProcessManager;
  external bool get renderTargetsEnabled;
  external bool get dumpNextRenderTargets;
  external List<RenderTargetTexture> get customRenderTargets;
  external bool get useDelayedTextureLoading;
  external List<String> get importedMeshesFiles;
  external bool get probesEnabled;
  external IOfflineProvider get offlineProvider;
  external AbstractActionManager get actionManager;
  external bool get proceduralTexturesEnabled;
  external num get animationTimeScale;
  external bool get dispatchAllSubMeshesOfActiveMeshes;
  external bool get requireLightSorting;
  external bool get useMaterialMeshMap;
  external bool get useClonedMeshMap;
  external dynamic get geometriesByUniqueId;
  external ISmartArrayLike<AbstractMesh> Function() get getActiveMeshCandidates;
  external ISmartArrayLike<SubMesh> Function(AbstractMesh mesh) get getActiveSubMeshCandidates;
  external ISmartArrayLike<SubMesh> Function(AbstractMesh mesh, Ray localRay) get getIntersectingSubMeshCandidates;
  external ISmartArrayLike<SubMesh> Function(AbstractMesh mesh, Collider collider) get getCollidingSubMeshCandidates;
  external num Function() get getDeterministicFrameTime;
  external set environmentTexture(BaseTexture value);
  external set environmentIntensity(num value);
  external set forceWireframe(bool value);
  external set skipFrustumClipping(bool value);
  external set forcePointsCloud(bool value);
  external set animationPropertiesOverride(AnimationPropertiesOverride value);
  external set onDispose(void Function() callback);
  external set beforeRender(void Function() callback);
  external set afterRender(void Function() callback);
  external set beforeCameraRender(void Function() callback);
  external set afterCameraRender(void Function() callback);
  external set DragMovementThreshold(num value);
  external set LongPressDelay(num value);
  external set DoubleClickDelay(num value);
  external set ExclusiveDoubleClickMode(bool value);
  external set useRightHandedSystem(bool value);
  external set fogEnabled(bool value);
  external set fogMode(num value);
  external set shadowsEnabled(bool value);
  external set lightsEnabled(bool value);
  external set activeCamera(Camera value);
  external set defaultMaterial(Material value);
  external set texturesEnabled(bool value);
  external set skeletonsEnabled(bool value);
  external set pointerX(num value);
  external set pointerY(num value);
  external set blockfreeActiveMeshesAndRenderingGroups(bool value);
  external set blockMaterialDirtyMechanism(bool value);
  external static set MinDeltaTime(num MinDeltaTime);
  external static set MaxDeltaTime(num MaxDeltaTime);
  external set cameraToUseForPointers(Camera cameraToUseForPointers);
  external set autoClear(bool autoClear);
  external set autoClearDepthAndStencil(bool autoClearDepthAndStencil);
  external set clearColor(Color4 clearColor);
  external set ambientColor(Color3 ambientColor);
  external set environmentBRDFTexture(BaseTexture environmentBRDFTexture);
  external set clipPlane(Plane clipPlane);
  external set clipPlane2(Plane clipPlane2);
  external set clipPlane3(Plane clipPlane3);
  external set clipPlane4(Plane clipPlane4);
  external set clipPlane5(Plane clipPlane5);
  external set clipPlane6(Plane clipPlane6);
  external set animationsEnabled(bool animationsEnabled);
  external set useConstantAnimationDeltaTime(bool useConstantAnimationDeltaTime);
  external set constantlyUpdateMeshUnderPointer(bool constantlyUpdateMeshUnderPointer);
  external set hoverCursor(String hoverCursor);
  external set defaultCursor(String defaultCursor);
  external set doNotHandleCursors(bool doNotHandleCursors);
  external set preventDefaultOnPointerDown(bool preventDefaultOnPointerDown);
  external set preventDefaultOnPointerUp(bool preventDefaultOnPointerUp);
  external set metadata(dynamic metadata);
  external set reservedDataStore(dynamic reservedDataStore);
  external set loadingPluginName(String loadingPluginName);
  external set disableOfflineSupportExceptionRules(List<RegExp> disableOfflineSupportExceptionRules);
  external set onDisposeObservable(Observable<Scene> onDisposeObservable);
  external set onBeforeRenderObservable(Observable<Scene> onBeforeRenderObservable);
  external set onAfterRenderObservable(Observable<Scene> onAfterRenderObservable);
  external set onAfterRenderCameraObservable(Observable<Camera> onAfterRenderCameraObservable);
  external set onBeforeAnimationsObservable(Observable<Scene> onBeforeAnimationsObservable);
  external set onAfterAnimationsObservable(Observable<Scene> onAfterAnimationsObservable);
  external set onBeforeDrawPhaseObservable(Observable<Scene> onBeforeDrawPhaseObservable);
  external set onAfterDrawPhaseObservable(Observable<Scene> onAfterDrawPhaseObservable);
  external set onReadyObservable(Observable<Scene> onReadyObservable);
  external set onBeforeCameraRenderObservable(Observable<Camera> onBeforeCameraRenderObservable);
  external set onAfterCameraRenderObservable(Observable<Camera> onAfterCameraRenderObservable);
  external set onBeforeActiveMeshesEvaluationObservable(Observable<Scene> onBeforeActiveMeshesEvaluationObservable);
  external set onAfterActiveMeshesEvaluationObservable(Observable<Scene> onAfterActiveMeshesEvaluationObservable);
  external set onBeforeParticlesRenderingObservable(Observable<Scene> onBeforeParticlesRenderingObservable);
  external set onAfterParticlesRenderingObservable(Observable<Scene> onAfterParticlesRenderingObservable);
  external set onDataLoadedObservable(Observable<Scene> onDataLoadedObservable);
  external set onNewCameraAddedObservable(Observable<Camera> onNewCameraAddedObservable);
  external set onCameraRemovedObservable(Observable<Camera> onCameraRemovedObservable);
  external set onNewLightAddedObservable(Observable<Light> onNewLightAddedObservable);
  external set onLightRemovedObservable(Observable<Light> onLightRemovedObservable);
  external set onNewGeometryAddedObservable(Observable<Geometry> onNewGeometryAddedObservable);
  external set onGeometryRemovedObservable(Observable<Geometry> onGeometryRemovedObservable);
  external set onNewTransformNodeAddedObservable(Observable<TransformNode> onNewTransformNodeAddedObservable);
  external set onTransformNodeRemovedObservable(Observable<TransformNode> onTransformNodeRemovedObservable);
  external set onNewMeshAddedObservable(Observable<AbstractMesh> onNewMeshAddedObservable);
  external set onMeshRemovedObservable(Observable<AbstractMesh> onMeshRemovedObservable);
  external set onNewSkeletonAddedObservable(Observable<Skeleton> onNewSkeletonAddedObservable);
  external set onSkeletonRemovedObservable(Observable<Skeleton> onSkeletonRemovedObservable);
  external set onNewMaterialAddedObservable(Observable<Material> onNewMaterialAddedObservable);
  external set onNewMultiMaterialAddedObservable(Observable<MultiMaterial> onNewMultiMaterialAddedObservable);
  external set onMaterialRemovedObservable(Observable<Material> onMaterialRemovedObservable);
  external set onMultiMaterialRemovedObservable(Observable<MultiMaterial> onMultiMaterialRemovedObservable);
  external set onNewTextureAddedObservable(Observable<BaseTexture> onNewTextureAddedObservable);
  external set onTextureRemovedObservable(Observable<BaseTexture> onTextureRemovedObservable);
  external set onBeforeRenderTargetsRenderObservable(Observable<Scene> onBeforeRenderTargetsRenderObservable);
  external set onAfterRenderTargetsRenderObservable(Observable<Scene> onAfterRenderTargetsRenderObservable);
  external set onBeforeStepObservable(Observable<Scene> onBeforeStepObservable);
  external set onAfterStepObservable(Observable<Scene> onAfterStepObservable);
  external set onActiveCameraChanged(Observable<Scene> onActiveCameraChanged);
  external set onBeforeRenderingGroupObservable(Observable<RenderingGroupInfo> onBeforeRenderingGroupObservable);
  external set onAfterRenderingGroupObservable(Observable<RenderingGroupInfo> onAfterRenderingGroupObservable);
  external set onMeshImportedObservable(Observable<AbstractMesh> onMeshImportedObservable);
  external set onAnimationFileImportedObservable(Observable<Scene> onAnimationFileImportedObservable);
  external set customLODSelector(AbstractMesh Function(AbstractMesh mesh, Camera camera) customLODSelector);
  external set pointerDownPredicate(bool Function(AbstractMesh Mesh) pointerDownPredicate);
  external set pointerUpPredicate(bool Function(AbstractMesh Mesh) pointerUpPredicate);
  external set pointerMovePredicate(bool Function(AbstractMesh Mesh) pointerMovePredicate);
  external set onPointerMove(void Function(PointerEvent evt, PickingInfo pickInfo, PointerEventTypes type) onPointerMove);
  external set onPointerDown(void Function(PointerEvent evt, PickingInfo pickInfo, PointerEventTypes type) onPointerDown);
  external set onPointerUp(void Function(PointerEvent evt, PickingInfo pickInfo, PointerEventTypes type) onPointerUp);
  external set onPointerPick(void Function(PointerEvent evt, PickingInfo pickInfo) onPointerPick);
  external set onPrePointerObservable(Observable<PointerInfoPre> onPrePointerObservable);
  external set onPointerObservable(Observable<PointerInfo> onPointerObservable);
  external set onPreKeyboardObservable(Observable<KeyboardInfoPre> onPreKeyboardObservable);
  external set onKeyboardObservable(Observable<KeyboardInfo> onKeyboardObservable);
  external set fogColor(Color3 fogColor);
  external set fogDensity(num fogDensity);
  external set fogStart(num fogStart);
  external set fogEnd(num fogEnd);
  external set prePass(bool prePass);
  external set activeCameras(List<Camera> activeCameras);
  external set physicsEnabled(bool physicsEnabled);
  external set particlesEnabled(bool particlesEnabled);
  external set spritesEnabled(bool spritesEnabled);
  external set lensFlaresEnabled(bool lensFlaresEnabled);
  external set collisionsEnabled(bool collisionsEnabled);
  external set gravity(Vector3 gravity);
  external set postProcessesEnabled(bool postProcessesEnabled);
  external set postProcessManager(PostProcessManager postProcessManager);
  external set renderTargetsEnabled(bool renderTargetsEnabled);
  external set dumpNextRenderTargets(bool dumpNextRenderTargets);
  external set customRenderTargets(List<RenderTargetTexture> customRenderTargets);
  external set useDelayedTextureLoading(bool useDelayedTextureLoading);
  external set importedMeshesFiles(List<String> importedMeshesFiles);
  external set probesEnabled(bool probesEnabled);
  external set offlineProvider(IOfflineProvider offlineProvider);
  external set actionManager(AbstractActionManager actionManager);
  external set proceduralTexturesEnabled(bool proceduralTexturesEnabled);
  external set animationTimeScale(num animationTimeScale);
  external set dispatchAllSubMeshesOfActiveMeshes(bool dispatchAllSubMeshesOfActiveMeshes);
  external set requireLightSorting(bool requireLightSorting);
  external set geometriesByUniqueId(dynamic geometriesByUniqueId);
  external set getActiveMeshCandidates(ISmartArrayLike<AbstractMesh> Function() getActiveMeshCandidates);
  external set getActiveSubMeshCandidates(ISmartArrayLike<SubMesh> Function(AbstractMesh mesh) getActiveSubMeshCandidates);
  external set getIntersectingSubMeshCandidates(ISmartArrayLike<SubMesh> Function(AbstractMesh mesh, Ray localRay) getIntersectingSubMeshCandidates);
  external set getCollidingSubMeshCandidates(ISmartArrayLike<SubMesh> Function(AbstractMesh mesh, Collider collider) getCollidingSubMeshCandidates);
  external set getDeterministicFrameTime(num Function() getDeterministicFrameTime);
  external static Material DefaultMaterialFactory(Scene scene);
  external static ICollisionCoordinator CollisionCoordinatorFactory();
  external void setStepId(num newStepId);
  external num getStepId();
  external num getInternalStep();
  external String getClassName();
  external void setDefaultCandidateProviders();
  external Material getCachedMaterial();
  external Effect getCachedEffect();
  external num getCachedVisibility();
  external bool isCachedMaterialInvalid(Material material, Effect effect, [num visibility]);
  external Engine getEngine();
  external num getTotalVertices();
  external num getActiveIndices();
  external num getActiveParticles();
  external num getActiveBones();
  external SmartArray<AbstractMesh> getActiveMeshes();
  external num getAnimationRatio();
  external num getRenderId();
  external num getFrameId();
  external void incrementRenderId();
  external Scene simulatePointerMove(PickingInfo pickResult, [dynamic pointerEventInit]);
  external Scene simulatePointerDown(PickingInfo pickResult, [dynamic pointerEventInit]);
  external Scene simulatePointerUp(PickingInfo pickResult, [dynamic pointerEventInit, bool doubleTap]);
  external bool isPointerCaptured([num pointerId]);
  external void attachControl([bool attachUp, bool attachDown, bool attachMove]);
  external void detachControl();
  external bool isReady();
  external void resetCachedMaterial();
  external void registerBeforeRender(void Function() func);
  external void unregisterBeforeRender(void Function() func);
  external void registerAfterRender(void Function() func);
  external void unregisterAfterRender(void Function() func);
  external void executeOnceBeforeRender(void Function() func, [num timeout]);
  external num getWaitingItemsCount();
  external void executeWhenReady(void Function() func);
  external Promise<void> whenReadyAsync();
  external void resetLastAnimationTimeFrame();
  external Matrix getViewMatrix();
  external Matrix getProjectionMatrix();
  external Matrix getTransformMatrix();
  external void setTransformMatrix(Matrix viewL, Matrix projectionL, [Matrix viewR, Matrix projectionR]);
  external UniformBuffer getSceneUniformBuffer();
  external num getUniqueId();
  external void addMesh(AbstractMesh newMesh, [bool recursive]);
  external num removeMesh(AbstractMesh toRemove, [bool recursive]);
  external void addTransformNode(TransformNode newTransformNode);
  external num removeTransformNode(TransformNode toRemove);
  external num removeSkeleton(Skeleton toRemove);
  external num removeMorphTargetManager(MorphTargetManager toRemove);
  external num removeLight(Light toRemove);
  external num removeCamera(Camera toRemove);
  external num removeParticleSystem(IParticleSystem toRemove);
  external num removeAnimation(Animation toRemove);
  external void stopAnimation(dynamic target, [String animationName, bool Function(dynamic target) targetMask]);
  external num removeAnimationGroup(AnimationGroup toRemove);
  external num removeMultiMaterial(MultiMaterial toRemove);
  external num removeMaterial(Material toRemove);
  external num removeActionManager(AbstractActionManager toRemove);
  external num removeTexture(BaseTexture toRemove);
  external void addLight(Light newLight);
  external void sortLightsByPriority();
  external void addCamera(Camera newCamera);
  external void addSkeleton(Skeleton newSkeleton);
  external void addParticleSystem(IParticleSystem newParticleSystem);
  external void addAnimation(Animation newAnimation);
  external void addAnimationGroup(AnimationGroup newAnimationGroup);
  external void addMultiMaterial(MultiMaterial newMultiMaterial);
  external void addMaterial(Material newMaterial);
  external void addMorphTargetManager(MorphTargetManager newMorphTargetManager);
  external void addGeometry(Geometry newGeometry);
  external void addActionManager(AbstractActionManager newActionManager);
  external void addTexture(BaseTexture newTexture);
  external void switchActiveCamera(Camera newCamera, [bool attachControl]);
  external Camera setActiveCameraByID(String id);
  external Camera setActiveCameraByName(String name);
  external AnimationGroup getAnimationGroupByName(String name);
  external Material getMaterialByUniqueID(num uniqueId);
  external Material getMaterialByID(String id);
  external Material getLastMaterialByID(String id);
  external Material getMaterialByName(String name);
  external BaseTexture getTextureByUniqueID(num uniqueId);
  external Camera getCameraByID(String id);
  external Camera getCameraByUniqueID(num uniqueId);
  external Camera getCameraByName(String name);
  external Bone getBoneByID(String id);
  external Bone getBoneByName(String name);
  external Light getLightByName(String name);
  external Light getLightByID(String id);
  external Light getLightByUniqueID(num uniqueId);
  external IParticleSystem getParticleSystemByID(String id);
  external Geometry getGeometryByID(String id);
  external bool pushGeometry(Geometry geometry, [bool force]);
  external bool removeGeometry(Geometry geometry);
  external List<Geometry> getGeometries();
  external AbstractMesh getMeshByID(String id);
  external List<AbstractMesh> getMeshesByID(String id);
  external TransformNode getTransformNodeByID(String id);
  external TransformNode getTransformNodeByUniqueID(num uniqueId);
  external List<TransformNode> getTransformNodesByID(String id);
  external AbstractMesh getMeshByUniqueID(num uniqueId);
  external AbstractMesh getLastMeshByID(String id);
  external Node getLastEntryByID(String id);
  external Node getNodeByID(String id);
  external Node getNodeByName(String name);
  external AbstractMesh getMeshByName(String name);
  external TransformNode getTransformNodeByName(String name);
  external Skeleton getLastSkeletonByID(String id);
  external Skeleton getSkeletonByUniqueId(num uniqueId);
  external Skeleton getSkeletonById(String id);
  external Skeleton getSkeletonByName(String name);
  external MorphTargetManager getMorphTargetManagerById(num id);
  external MorphTarget getMorphTargetById(String id);
  external MorphTarget getMorphTargetByName(String name);
  external PostProcess getPostProcessByName(String name);
  external bool isActiveMesh(AbstractMesh mesh);
  external bool removeExternalData(String key);
  external void freeProcessedMaterials();
  external void freeActiveMeshes();
  external void freeRenderingGroups();
  external Scene freezeActiveMeshes([bool skipEvaluateActiveMeshes, void Function() onSuccess, void Function(String message) onError]);
  external Scene unfreezeActiveMeshes();
  external void updateTransformMatrix([bool force]);
  external void animate();
  external void render([bool updateCameras, bool ignoreAnimations]);
  external void freezeMaterials();
  external void unfreezeMaterials();
  external void dispose();
  external void clearCachedVertexData();
  external void cleanCachedTextureBuffer();
  external Ray createPickingRay(num x, num y, Matrix world, Camera camera, [bool cameraViewSpace]);
  external Scene createPickingRayToRef(num x, num y, Matrix world, Ray result, Camera camera, [bool cameraViewSpace]);
  external Ray createPickingRayInCameraSpace(num x, num y, [Camera camera]);
  external Scene createPickingRayInCameraSpaceToRef(num x, num y, Ray result, [Camera camera]);
  external PickingInfo pickWithBoundingInfo(num x, num y, [bool Function(AbstractMesh mesh) predicate, bool fastCheck, Camera camera]);
  external void setPointerOverMesh(AbstractMesh mesh, [num pointerId]);
  external AbstractMesh getPointerOverMesh();
  external List<Mesh> getMeshesByTags(String tagsQuery, [void Function(AbstractMesh mesh) forEach]);
  external List<Camera> getCamerasByTags(String tagsQuery, [void Function(Camera camera) forEach]);
  external List<Light> getLightsByTags(String tagsQuery, [void Function(Light light) forEach]);
  external List<Material> getMaterialByTags(String tagsQuery, [void Function(Material material) forEach]);
  external List<TransformNode> getTransformNodesByTags(String tagsQuery, [void Function(TransformNode transform) forEach]);
  external void setRenderingOrder(num renderingGroupId, [num Function(SubMesh a, SubMesh b) opaqueSortCompareFn, num Function(SubMesh a, SubMesh b) alphaTestSortCompareFn, num Function(SubMesh a, SubMesh b) transparentSortCompareFn]);
  external void setRenderingAutoClearDepthStencil(num renderingGroupId, bool autoClearDepthStencil, [bool depth, bool stencil]);
  external IRenderingManagerAutoClearSetup getAutoClearDepthStencilSetup(num index);
  external void markAllMaterialsAsDirty(num flag, [bool Function(Material mat) predicate]);
  external List<ISpriteManager> spriteManagers;
  external Observable<Scene> onBeforeSpritesRenderingObservable;
  external Observable<Scene> onAfterSpritesRenderingObservable;
  external PickingInfo pickSprite(num x, num y, [bool Function(Sprite sprite) predicate, bool fastCheck, Camera camera]);
  external PickingInfo pickSpriteWithRay(Ray ray, [bool Function(Sprite sprite) predicate, bool fastCheck, Camera camera]);
  external List<PickingInfo> multiPickSprite(num x, num y, [bool Function(Sprite sprite) predicate, Camera camera]);
  external List<PickingInfo> multiPickSpriteWithRay(Ray ray, [bool Function(Sprite sprite) predicate, Camera camera]);
  external void setPointerOverSprite(Sprite sprite);
  external Sprite getPointerOverSprite();
  external num deltaTime;
  external Animatable beginWeightedAnimation(dynamic target, num from, num to, num weight, [bool loop, num speedRatio, void Function() onAnimationEnd, Animatable animatable, bool Function(dynamic target) targetMask, void Function() onAnimationLoop, bool isAdditive]);
  external Animatable beginAnimation(dynamic target, num from, num to, [bool loop, num speedRatio, void Function() onAnimationEnd, Animatable animatable, bool stopCurrent, bool Function(dynamic target) targetMask, void Function() onAnimationLoop, bool isAdditive]);
  external List<Animatable> beginHierarchyAnimation(dynamic target, bool directDescendantsOnly, num from, num to, [bool loop, num speedRatio, void Function() onAnimationEnd, Animatable animatable, bool stopCurrent, bool Function(dynamic target) targetMask, void Function() onAnimationLoop, bool isAdditive]);
  external Animatable beginDirectAnimation(dynamic target, List<Animation> animations, num from, num to, [bool loop, num speedRatio, void Function() onAnimationEnd, void Function() onAnimationLoop, bool isAdditive]);
  external List<Animatable> beginDirectHierarchyAnimation(Node target, bool directDescendantsOnly, List<Animation> animations, num from, num to, [bool loop, num speedRatio, void Function() onAnimationEnd, void Function() onAnimationLoop, bool isAdditive]);
  external Animatable getAnimatableByTarget(dynamic target);
  external List<Animatable> getAllAnimatablesByTarget(dynamic target);
  external void stopAllAnimations();
  external SoundTrack mainSoundTrack;
  external List<SoundTrack> soundTracks;
  external bool audioEnabled;
  external bool headphone;
  external Vector3 Function() audioListenerPositionProvider;
  external num audioPositioningRefreshRate;
  external Sound getSoundByName(String name);
  external GamepadManager gamepadManager;
  external Octree<AbstractMesh> selectionOctree;
  external Octree<AbstractMesh> createOrUpdateSelectionOctree([num maxCapacity, num maxDepth]);
  external DebugLayer debugLayer;
  external void createDefaultLight([bool replace]);
  external void createDefaultCamera([bool createArcRotateCamera, bool replace, bool attachCameraControls]);
  external void createDefaultCameraOrLight([bool createArcRotateCamera, bool replace, bool attachCameraControls]);
  external Mesh createDefaultSkybox([BaseTexture environmentTexture, bool pbr, num scale, num blur, bool setGlobalEnvTexture]);
  external EnvironmentHelper createDefaultEnvironment([IEnvironmentHelperOptions options]);
  external VRExperienceHelper createDefaultVRExperience([VRExperienceHelperOptions webVROptions]);
  external Promise<WebXRDefaultExperience> createDefaultXRExperienceAsync(WebXRDefaultExperienceOptions options);
  external SimplificationQueue simplificationQueue;
  external Observable<Scene> onBeforePhysicsObservable;
  external Observable<Scene> onAfterPhysicsObservable;
  external IPhysicsEngine getPhysicsEngine();
  external bool enablePhysics(Vector3 gravity, [IPhysicsEnginePlugin plugin]);
  external void disablePhysicsEngine();
  external bool isPhysicsEnabled();
  external void deleteCompoundImpostor(dynamic compound);
  external GeometryBufferRenderer geometryBufferRenderer;
  external GeometryBufferRenderer enableGeometryBufferRenderer([num ratio]);
  external void disableGeometryBufferRenderer();
  external PostProcessRenderPipelineManager postProcessRenderPipelineManager;
  external bool forceShowBoundingBoxes;
  external BoundingBoxRenderer getBoundingBoxRenderer();
  external DepthRenderer enableDepthRenderer([Camera camera, bool storeNonLinearDepth, bool force32bitsFloat]);
  external void disableDepthRenderer([Camera camera]);
  external OutlineRenderer getOutlineRenderer();
}
