part of babylon;

/// class AbstractMesh
@JS()
class AbstractMesh extends TransformNode implements IDisposable, ICullable, IGetSetVerticesData {
  external AbstractMesh();
  external AbstractMesh.args(String name, [Scene scene]);
  external num get BILLBOARDMODE_NONE;
  external num get BILLBOARDMODE_X;
  external num get BILLBOARDMODE_Y;
  external num get BILLBOARDMODE_Z;
  external num get BILLBOARDMODE_ALL;
  external num get BILLBOARDMODE_USE_POSITION;
  external num get facetNb;
  external num get partitioningSubdivisions;
  external num get partitioningBBoxRatio;
  external bool get mustDepthSortFacets;
  external Vector3 get facetDepthSortFrom;
  external bool get isFacetDataEnabled;
  external num get visibility;
  external Material get material;
  external bool get receiveShadows;
  external bool get hasVertexAlpha;
  external bool get useVertexColors;
  external bool get computeBonesUsingShaders;
  external num get numBoneInfluencers;
  external bool get applyFog;
  external num get layerMask;
  external num get collisionMask;
  external num get collisionGroup;
  external List<Light> get lightSources;
  external Skeleton get skeleton;
  external Vector3 get scaling;
  external bool get isBlocked;
  external bool get useBones;
  external bool get isAnInstance;
  external bool get hasInstances;
  external bool get checkCollisions;
  external static num get OCCLUSION_TYPE_NONE;
  external static num get OCCLUSION_TYPE_OPTIMISTIC;
  external static num get OCCLUSION_TYPE_STRICT;
  external static num get OCCLUSION_ALGORITHM_TYPE_ACCURATE;
  external static num get OCCLUSION_ALGORITHM_TYPE_CONSERVATIVE;
  external static num get CULLINGSTRATEGY_STANDARD;
  external static num get CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY;
  external static num get CULLINGSTRATEGY_OPTIMISTIC_INCLUSION;
  external static num get CULLINGSTRATEGY_OPTIMISTIC_INCLUSION_THEN_BSPHERE_ONLY;
  external num get cullingStrategy;
  external Observable<AbstractMesh> get onCollideObservable;
  external Observable<Vector3> get onCollisionPositionChangeObservable;
  external Observable<AbstractMesh> get onMaterialChangedObservable;
  external bool get definedFacingForward;
  external num get alphaIndex;
  external bool get isVisible;
  external bool get isPickable;
  external bool get showSubMeshesBoundingBox;
  external bool get isBlocker;
  external bool get enablePointerMoveEvents;
  external num get renderingGroupId;
  external Color3 get outlineColor;
  external num get outlineWidth;
  external Color3 get overlayColor;
  external num get overlayAlpha;
  external bool get useOctreeForRenderingSelection;
  external bool get useOctreeForPicking;
  external bool get useOctreeForCollisions;
  external bool get alwaysSelectAsActiveMesh;
  external bool get doNotSyncBoundingInfo;
  external AbstractActionManager get actionManager;
  external Vector3 get ellipsoid;
  external Vector3 get ellipsoidOffset;
  external num get edgesWidth;
  external Color4 get edgesColor;
  external List<SubMesh> get subMeshes;
  external Observable<AbstractMesh> get onRebuildObservable;
  external set partitioningSubdivisions(num nb);
  external set partitioningBBoxRatio(num ratio);
  external set mustDepthSortFacets(bool sort);
  external set facetDepthSortFrom(Vector3 location);
  external set onCollide(void Function() callback);
  external set onCollisionPositionChange(void Function() callback);
  external set visibility(num value);
  external set material(Material value);
  external set receiveShadows(bool value);
  external set hasVertexAlpha(bool value);
  external set useVertexColors(bool value);
  external set computeBonesUsingShaders(bool value);
  external set numBoneInfluencers(num value);
  external set applyFog(bool value);
  external set layerMask(num value);
  external set collisionMask(num mask);
  external set collisionGroup(num mask);
  external set skeleton(Skeleton value);
  external set scaling(Vector3 newScaling);
  external set checkCollisions(bool collisionEnabled);
  external static set OCCLUSION_TYPE_NONE(num OCCLUSION_TYPE_NONE);
  external static set OCCLUSION_TYPE_OPTIMISTIC(num OCCLUSION_TYPE_OPTIMISTIC);
  external static set OCCLUSION_TYPE_STRICT(num OCCLUSION_TYPE_STRICT);
  external static set OCCLUSION_ALGORITHM_TYPE_ACCURATE(num OCCLUSION_ALGORITHM_TYPE_ACCURATE);
  external static set OCCLUSION_ALGORITHM_TYPE_CONSERVATIVE(num OCCLUSION_ALGORITHM_TYPE_CONSERVATIVE);
  external set cullingStrategy(num cullingStrategy);
  external set onCollideObservable(Observable<AbstractMesh> onCollideObservable);
  external set onCollisionPositionChangeObservable(Observable<Vector3> onCollisionPositionChangeObservable);
  external set onMaterialChangedObservable(Observable<AbstractMesh> onMaterialChangedObservable);
  external set definedFacingForward(bool definedFacingForward);
  external set alphaIndex(num alphaIndex);
  external set isVisible(bool isVisible);
  external set isPickable(bool isPickable);
  external set showSubMeshesBoundingBox(bool showSubMeshesBoundingBox);
  external set isBlocker(bool isBlocker);
  external set enablePointerMoveEvents(bool enablePointerMoveEvents);
  external set renderingGroupId(num renderingGroupId);
  external set outlineColor(Color3 outlineColor);
  external set outlineWidth(num outlineWidth);
  external set overlayColor(Color3 overlayColor);
  external set overlayAlpha(num overlayAlpha);
  external set useOctreeForRenderingSelection(bool useOctreeForRenderingSelection);
  external set useOctreeForPicking(bool useOctreeForPicking);
  external set useOctreeForCollisions(bool useOctreeForCollisions);
  external set alwaysSelectAsActiveMesh(bool alwaysSelectAsActiveMesh);
  external set doNotSyncBoundingInfo(bool doNotSyncBoundingInfo);
  external set actionManager(AbstractActionManager actionManager);
  external set ellipsoid(Vector3 ellipsoid);
  external set ellipsoidOffset(Vector3 ellipsoidOffset);
  external set edgesWidth(num edgesWidth);
  external set edgesColor(Color4 edgesColor);
  external set subMeshes(List<SubMesh> subMeshes);
  external set onRebuildObservable(Observable<AbstractMesh> onRebuildObservable);
  external String getClassName();
  external String toString([bool fullDetails]);
  external AbstractMesh getLOD(Camera camera);
  external num getTotalVertices();
  external num getTotalIndices();
  external Int32List getIndices([bool copyWhenShared, bool forceCopy]);
  external Float32List getVerticesData(String kind, [bool copyWhenShared, bool forceCopy]);
  external AbstractMesh setVerticesData(String kind, Float32List data, bool updatable);
  external AbstractMesh updateVerticesData(String kind, Float32List data, [bool updateExtends, bool makeItUnique]);
  external AbstractMesh setIndices(Int32List indices, num totalVertices, [bool updatable]);
  external bool isVerticesDataPresent(String kind);
  external BoundingInfo getBoundingInfo();
  external AbstractMesh normalizeToUnitCube([bool includeDescendants, bool ignoreRotation, bool Function(AbstractMesh node) predicate]);
  external AbstractMesh setBoundingInfo(BoundingInfo boundingInfo);
  external Matrix getWorldMatrix();
  external AbstractMesh movePOV(num amountRight, num amountUp, num amountForward);
  external Vector3 calcMovePOV(num amountRight, num amountUp, num amountForward);
  external AbstractMesh rotatePOV(num flipBack, num twirlClockwise, num tiltRight);
  external Vector3 calcRotatePOV(num flipBack, num twirlClockwise, num tiltRight);
  external AbstractMesh refreshBoundingInfo([bool applySkeleton]);
  external bool isInFrustum(List<Plane> frustumPlanes);
  external bool isCompletelyInFrustum(List<Plane> frustumPlanes);
  external bool intersectsPoint(Vector3 point);
  external AbstractMesh moveWithCollisions(Vector3 displacement);
  external AbstractMesh clone(String name, Node newParent, [bool doNotCloneChildren]);
  external AbstractMesh releaseSubMeshes();
  external void dispose([bool doNotRecurse, bool disposeMaterialAndTextures]);
  external AbstractMesh addChild(AbstractMesh mesh);
  external AbstractMesh removeChild(AbstractMesh mesh);
  external AbstractMesh updateFacetData();
  external List<Vector3> getFacetLocalNormals();
  external List<Vector3> getFacetLocalPositions();
  external List<num> getFacetLocalPartitioning();
  external Vector3 getFacetPosition(num i);
  external AbstractMesh getFacetPositionToRef(num i, Vector3 ref);
  external Vector3 getFacetNormal(num i);
  external AbstractMesh getFacetNormalToRef(num i, Vector3 ref);
  external List<num> getFacetsAtLocalCoordinates(num x, num y, num z);
  external num getClosestFacetAtCoordinates(num x, num y, num z, [Vector3 projected, bool checkFace, bool facing]);
  external num getClosestFacetAtLocalCoordinates(num x, num y, num z, [Vector3 projected, bool checkFace, bool facing]);
  external dynamic getFacetDataParameters();
  external AbstractMesh disableFacetData();
  external AbstractMesh updateIndices(Int32List indices, [num offset, bool gpuMemoryOnly]);
  external AbstractMesh createNormals(bool updatable);
  external AbstractMesh alignWithNormal(Vector3 normal, [Vector3 upDirection]);
  external AbstractMesh disableEdgesRendering();
  external AbstractMesh enableEdgesRendering([num epsilon, bool checkVerticesInsteadOfIndices]);
  num occlusionRetryCount;
  num occlusionType;
  num occlusionQueryAlgorithmType;
  bool isOccluded;
  bool isOcclusionQueryInProgress;
  PhysicsImpostor physicsImpostor;
  external PhysicsImpostor getPhysicsImpostor();
  external AbstractMesh applyImpulse(Vector3 force, Vector3 contactPoint);
  external AbstractMesh setPhysicsLinkWith(Mesh otherMesh, Vector3 pivot1, Vector3 pivot2, [dynamic options]);
  bool showBoundingBox;
  bool renderOutline;
  bool renderOverlay;
}
