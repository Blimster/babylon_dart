part of babylon;

/// class Sound
@JS()
class Sound {
  external Sound(String name, dynamic urlOrArrayBuffer, Scene scene, [void Function() readyToPlayCallback, ISoundOptions options]);
  external num get directionalConeInnerAngle;
  external num get directionalConeOuterAngle;
  external String get name;
  external bool get autoplay;
  external bool get loop;
  external bool get useCustomAttenuation;
  external num get soundTrackId;
  external bool get isPlaying;
  external bool get isPaused;
  external bool get spatialSound;
  external num get refDistance;
  external num get rolloffFactor;
  external num get maxDistance;
  external String get distanceModel;
  external dynamic Function() get onended;
  external Observable<Sound> get onEndedObservable;
  external set directionalConeInnerAngle(num value);
  external set directionalConeOuterAngle(num value);
  external set name(String name);
  external set autoplay(bool autoplay);
  external set loop(bool loop);
  external set useCustomAttenuation(bool useCustomAttenuation);
  external set soundTrackId(num soundTrackId);
  external set isPlaying(bool isPlaying);
  external set isPaused(bool isPaused);
  external set spatialSound(bool spatialSound);
  external set refDistance(num refDistance);
  external set rolloffFactor(num rolloffFactor);
  external set maxDistance(num maxDistance);
  external set distanceModel(String distanceModel);
  external set onended(dynamic Function() onended);
  external set onEndedObservable(Observable<Sound> onEndedObservable);
  external void dispose();
  external bool isReady();
  external void setAudioBuffer(AudioBuffer audioBuffer);
  external void updateOptions(ISoundOptions options);
  external void switchPanningModelToHRTF();
  external void switchPanningModelToEqualPower();
  external void connectToSoundTrackAudioNode(AudioNode soundTrackAudioNode);
  external void setDirectionalCone(num coneInnerAngle, num coneOuterAngle, num coneOuterGain);
  external void setPosition(Vector3 newPosition);
  external void setLocalDirectionToMesh(Vector3 newLocalDirection);
  external void updateDistanceFromListener();
  external void setAttenuationFunction(num Function(num currentVolume, num currentDistance, num maxDistance, num refDistance, num rolloffFactor) callback);
  external void play([num time, num offset, num length]);
  external void stop([num time]);
  external void pause();
  external void setVolume(num newVolume, [num time]);
  external void setPlaybackRate(num newPlaybackRate);
  external num getVolume();
  external void attachToMesh(TransformNode transformNode);
  external void detachFromMesh();
  external Sound clone();
  external AudioBuffer getAudioBuffer();
  external dynamic serialize();
  external static Sound Parse(dynamic parsedSound, Scene scene, String rootUrl, [Sound sourceSound]);
}
