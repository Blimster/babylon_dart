part of babylon;

/// class Camera
@JS()
class Camera extends Node {
  external Camera();
  external Camera.args(String name, Vector3 position, Scene scene, [bool setActiveOnSceneIfNoneActive]);
  external Vector3 get position;
  external Vector3 get globalPosition;
  external List<Camera> get rigCameras;
  external PostProcess get rigPostProcess;
  external bool get isLeftCamera;
  external bool get isRightCamera;
  external FreeCamera get leftCamera;
  external FreeCamera get rightCamera;
  external Quaternion get absoluteRotation;
  external static num get PERSPECTIVE_CAMERA;
  external static num get ORTHOGRAPHIC_CAMERA;
  external static num get FOVMODE_VERTICAL_FIXED;
  external static num get FOVMODE_HORIZONTAL_FIXED;
  external static num get RIG_MODE_NONE;
  external static num get RIG_MODE_STEREOSCOPIC_ANAGLYPH;
  external static num get RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL;
  external static num get RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED;
  external static num get RIG_MODE_STEREOSCOPIC_OVERUNDER;
  external static num get RIG_MODE_STEREOSCOPIC_INTERLACED;
  external static num get RIG_MODE_VR;
  external static num get RIG_MODE_WEBVR;
  external static num get RIG_MODE_CUSTOM;
  external static bool get ForceAttachControlToAlwaysPreventDefault;
  external Vector3 get upVector;
  external num get orthoLeft;
  external num get orthoRight;
  external num get orthoBottom;
  external num get orthoTop;
  external num get fov;
  external num get minZ;
  external num get maxZ;
  external num get inertia;
  external num get mode;
  external bool get isIntermediate;
  external Viewport get viewport;
  external num get layerMask;
  external num get fovMode;
  external num get cameraRigMode;
  external num get interaxialDistance;
  external bool get isStereoscopicSideBySide;
  external List<RenderTargetTexture> get customRenderTargets;
  external RenderTargetTexture get outputRenderTarget;
  external Observable<Camera> get onViewMatrixChangedObservable;
  external Observable<Camera> get onProjectionMatrixChangedObservable;
  external Observable<Camera> get onAfterCheckInputsObservable;
  external Observable<Camera> get onRestoreStateObservable;
  external bool get isRigCamera;
  external Camera get rigParent;
  external set position(Vector3 newPosition);
  external static set ForceAttachControlToAlwaysPreventDefault(bool ForceAttachControlToAlwaysPreventDefault);
  external set upVector(Vector3 upVector);
  external set orthoLeft(num orthoLeft);
  external set orthoRight(num orthoRight);
  external set orthoBottom(num orthoBottom);
  external set orthoTop(num orthoTop);
  external set fov(num fov);
  external set minZ(num minZ);
  external set maxZ(num maxZ);
  external set inertia(num inertia);
  external set mode(num mode);
  external set isIntermediate(bool isIntermediate);
  external set viewport(Viewport viewport);
  external set layerMask(num layerMask);
  external set fovMode(num fovMode);
  external set cameraRigMode(num cameraRigMode);
  external set interaxialDistance(num interaxialDistance);
  external set isStereoscopicSideBySide(bool isStereoscopicSideBySide);
  external set customRenderTargets(List<RenderTargetTexture> customRenderTargets);
  external set outputRenderTarget(RenderTargetTexture outputRenderTarget);
  external set onViewMatrixChangedObservable(Observable<Camera> onViewMatrixChangedObservable);
  external set onProjectionMatrixChangedObservable(Observable<Camera> onProjectionMatrixChangedObservable);
  external set onAfterCheckInputsObservable(Observable<Camera> onAfterCheckInputsObservable);
  external set onRestoreStateObservable(Observable<Camera> onRestoreStateObservable);
  external set isRigCamera(bool isRigCamera);
  external set rigParent(Camera rigParent);
  external Camera storeState();
  external bool restoreState();
  external String getClassName();
  external String toString([bool fullDetails]);
  external bool isActiveMesh(Mesh mesh);
  external bool isReady([bool completeCheck]);
  external void attachControl(HtmlElement element, [bool noPreventDefault]);
  external void detachControl(HtmlElement element);
  external void update();
  external num attachPostProcess(PostProcess postProcess, [num insertAt]);
  external void detachPostProcess(PostProcess postProcess);
  external Matrix getWorldMatrix();
  external Matrix getViewMatrix([bool force]);
  external void freezeProjectionMatrix([Matrix projection]);
  external void unfreezeProjectionMatrix();
  external Matrix getProjectionMatrix([bool force]);
  external Matrix getTransformationMatrix();
  external bool isInFrustum(ICullable target, [bool checkRigCameras]);
  external bool isCompletelyInFrustum(ICullable target);
  external Ray getForwardRay([num length, Matrix transform, Vector3 origin]);
  external void dispose([bool doNotRecurse, bool disposeMaterialAndTextures]);
  external Vector3 getLeftTarget();
  external Vector3 getRightTarget();
  external void setCameraRigMode(num mode, dynamic rigParams);
  external void setCameraRigParameter(String name, dynamic value);
  external Camera createRigCamera(String name, num cameraIndex);
  external dynamic serialize();
  external Camera clone(String name);
  external Vector3 getDirection(Vector3 localAxis);
  external void getDirectionToRef(Vector3 localAxis, Vector3 result);
  external static Camera Function() GetConstructorFromName(String type, String name, Scene scene, [num interaxial_distance, bool isStereoscopicSideBySide]);
  external static Camera Parse(dynamic parsedCamera, Scene scene);
}
